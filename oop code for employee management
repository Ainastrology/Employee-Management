#include <iostream>
#include <stdio.h>
using namespace std;
class basicInfo {
protected:
    char name[30];
    int empId;
    string gender;
    int salary;
public:
    void getBasicInfo(void)                       //parent class
    {
        cout << "Enter Name: ";
        cin.getline(name, 30);
       // cin.ignore();
        cout << "Enter Emp. Id: ";
        cin >> empId;
        cout<<"Enter salary : ";
        cin>> salary ;
        cin.ignore();
        cout << "Enter Gender: ";
        getline(cin , gender);     
    }
};
class deptInfo {                              //parent class
protected:
    char deptName[30];
    char assignedWork[30];
    int time;
public:
    void getDeptInfo(void)
    {
    	cout<<endl<<endl;                      //just to give some space
        cout << "Enter Department Name: ";
        cin.getline(deptName, 30);
        cout << "Enter assigned work: ";
        fflush(stdin);
        cin.getline(assignedWork, 30);
        cout << "Enter time in hours to complete work: ";
        cin >> time;
    }
};
class employee : private basicInfo, private deptInfo {      // derived class-inherited classes
public:
    void getEmployeeInfo(void)
    {
        cout << "Enter employee's basic info: " << endl;
        getBasicInfo(); //calling of public member function
        cout << "Enter employee's department info: " << endl;
        getDeptInfo(); //calling of public member function
    }
    void printEmployeeInfo(void)
    {
        cout << "Employee's Information is: " << endl;
        cout << "Basic Information...:" << endl;
        cout << "Name: " << name << endl; 
        cout << "Employee ID: " << empId << endl; 
        cout << "Salary: " << salary << endl ; 
        cout << "Gender: " << gender << endl ;
        cout << "Department Information...:" << endl;
        cout << "Department Name: " << deptName << endl; 
        cout << "Assigned Work: " << assignedWork << endl; 
        cout << "Time to complete work: " << time << endl; 
    }
};
int main()
{   employee emp;                           //create object of class employee                     
    emp.getEmployeeInfo();                   //concepts of abstraction & encapsulation
    emp.printEmployeeInfo();
    return 0;
}
